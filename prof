Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 26.32      0.10     0.10   300001     0.00     0.00  get_local_func
 18.42      0.17     0.07  3800504     0.00     0.00  FACT_get_curr_thread
 13.16      0.22     0.05  1000000     0.00     0.00  get_local_var
 13.16      0.27     0.05   900058     0.00     0.00  tokcmp_safe
 10.53      0.31     0.04   100013     0.00     0.00  get_exp_length_first
  7.90      0.34     0.03   200016     0.00     0.00  eval_expression
  5.26      0.36     0.02   400042     0.00     0.00  eval
  2.63      0.37     0.01    99999     0.00     0.00  lambda_proc
  1.32      0.38     0.01       11     0.45     0.45  FACT_INSTALL_BIF
  1.32      0.38     0.01                             comp_prims
  0.00      0.38     0.00  3800504     0.00     0.00  get_ip_ref
  0.00      0.38     0.00  2400290     0.00     0.00  get_ip
  0.00      0.38     0.00   700107     0.00     0.00  set_ip
  0.00      0.38     0.00   500075     0.00     0.00  move_ip
  0.00      0.38     0.00   500062     0.00     0.00  next_inst
  0.00      0.38     0.00   400015     0.00     0.00  get_array_var
  0.00      0.38     0.00   300002     0.00     0.00  get_var
  0.00      0.38     0.00   230926     0.00     0.00  FACT_realloc
  0.00      0.38     0.00   202595     0.00     0.00  FACT_malloc
  0.00      0.38     0.00   102011     0.00     0.00  mpc_cmp
  0.00      0.38     0.00   100174     0.00     0.00  mpc_init
  0.00      0.38     0.00   100173     0.00     0.00  alloc_var
  0.00      0.38     0.00   100052     0.00     0.00  alloc_func
  0.00      0.38     0.00   100035     0.00     0.00  run_prim
  0.00      0.38     0.00   100001     0.00     0.00  get_func
  0.00      0.38     0.00   100000     0.00     0.00  eval_math
  0.00      0.38     0.00   100000     0.00     0.00  isprim
  0.00      0.38     0.00   100000     0.00     0.00  procedure
  0.00      0.38     0.00    99999     0.00     0.00  mpc_mul
  0.00      0.38     0.00    99999     0.00     0.00  mpc_sub
  0.00      0.38     0.00    99999     0.00     0.00  mult_assignment
  0.00      0.38     0.00     2011     0.00     0.00  compare_var_arrays
  0.00      0.38     0.00     1970     0.00     0.00  is_in_quotes
  0.00      0.38     0.00     1517     0.00     0.00  op_get_prec
  0.00      0.38     0.00      921     0.00     0.00  is_opt
  0.00      0.38     0.00      635     0.00     0.00  isnum
  0.00      0.38     0.00      259     0.00     0.00  pop_s
  0.00      0.38     0.00      259     0.00     0.00  push_s
  0.00      0.38     0.00      162     0.00     0.00  op_is_lr
  0.00      0.38     0.00       94     0.00     0.00  get_prec
  0.00      0.38     0.00       94     0.00     0.00  mpc_set_str
  0.00      0.38     0.00       94     0.00     0.00  num_to_var
  0.00      0.38     0.00       74     0.00     0.00  get_end_block
  0.00      0.38     0.00       64     0.00     0.00  FACT_free
  0.00      0.38     0.00       40     0.00     0.00  get_words
  0.00      0.38     0.00       40     0.00     0.00  mpc_set
  0.00      0.38     0.00       36     0.00     0.00  add_func
  0.00      0.38     0.00       32     0.00     0.00  get_newlines
  0.00      0.38     0.00       30     0.00     0.00  mpc_set_si
  0.00      0.38     0.00       29     0.00     0.00  mpc_get_si
  0.00      0.38     0.00       29     0.00     0.00  power_of_ten
  0.00      0.38     0.00       28     0.00     0.00  get_exp_length
  0.00      0.38     0.00       27     0.00     0.00  get_array_func
  0.00      0.38     0.00       19     0.00     0.00  make_syn_tree
  0.00      0.38     0.00       18     0.00     0.00  get_input
  0.00      0.38     0.00       16     0.00     0.00  check
  0.00      0.38     0.00       16     0.00     0.00  compile_constants
  0.00      0.38     0.00       16     0.00     0.00  compile_to_bytecode
  0.00      0.38     0.00       16     0.00     0.00  parse
  0.00      0.38     0.00       13     0.00     0.00  combine_strs
  0.00      0.38     0.00       13     0.00     0.00  liven_func
  0.00      0.38     0.00       12     0.00     0.00  defunc
  0.00      0.38     0.00        7     0.00     0.00  add_var
  0.00      0.38     0.00        5     0.00     0.00  clone_var
  0.00      0.38     0.00        5     0.00     0.00  define
  0.00      0.38     0.00        3     0.00     0.00  free_var
  0.00      0.38     0.00        3     0.00     0.00  set
  0.00      0.38     0.00        2     0.00     0.00  mpc_set_ui
  0.00      0.38     0.00        2     0.00     0.00  prepare_function
  0.00      0.38     0.00        2     0.00   176.69  run_file
  0.00      0.38     0.00        2     0.00     0.00  run_func
  0.00      0.38     0.00        1     0.00     0.00  FACT_get_ui
  0.00      0.38     0.00        1     0.00     0.00  array_to_string
  0.00      0.38     0.00        1     0.00     3.68  for_loop
  0.00      0.38     0.00        1     0.00     0.00  import_func
  0.00      0.38     0.00        1     0.00     5.00  init_BIFs
  0.00      0.38     0.00        1     0.00     0.00  lambda
  0.00      0.38     0.00        1     0.00   358.38  process_args
  0.00      0.38     0.00        1     0.00     0.00  rm_cslashes
  0.00      0.38     0.00        1     0.00     0.00  string_to_array
  0.00      0.38     0.00        1     0.00     0.00  sub

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 2.63% of 0.38 seconds

index % time    self  children    called     name
                0.00    0.36       1/1           main [2]
[1]     94.3    0.00    0.36       1         process_args [1]
                0.00    0.35       2/2           run_file [3]
                0.00    0.01       1/1           init_BIFs [24]
                0.00    0.00       2/7           add_var [73]
                0.00    0.00       1/100052      alloc_func [39]
                0.00    0.00       1/30          mpc_set_si [62]
-----------------------------------------------
                                                 <spontaneous>
[2]     94.3    0.00    0.36                 main [2]
                0.00    0.36       1/1           process_args [1]
                0.00    0.00       1/202595      FACT_malloc [35]
-----------------------------------------------
                0.00    0.35       2/2           process_args [1]
[3]     93.0    0.00    0.35       2         run_file [3]
                0.06    0.29      16/16          eval_expression <cycle 1> [15]
                0.00    0.00      16/700107      set_ip [20]
                0.00    0.00      18/18          get_input [67]
                0.00    0.00      16/40          get_words [58]
                0.00    0.00      16/32          get_newlines [61]
                0.00    0.00      16/16          parse [71]
                0.00    0.00      16/19          make_syn_tree [66]
-----------------------------------------------
[4]     93.0    0.06    0.29      16+1000097 <cycle 1 as a whole> [4]
                0.02    0.22  400042             eval <cycle 1> [5]
                0.00    0.06  100000             procedure <cycle 1> [10]
                0.03    0.01  200016             eval_expression <cycle 1> [15]
                0.01    0.00   99999             lambda_proc <cycle 1> [22]
                0.00    0.00       1             for_loop <cycle 1> [25]
                0.00    0.00      13             liven_func <cycle 1> [26]
                0.00    0.00  100035             run_prim <cycle 1> [27]
                0.00    0.00       2             prepare_function <cycle 1> [30]
                0.00    0.00       2             run_func <cycle 1> [32]
                0.00    0.00  100000             eval_math <cycle 1> [40]
                0.00    0.00       3             set <cycle 1> [76]
-----------------------------------------------
                                   2             for_loop <cycle 1> [25]
                                   6             prepare_function <cycle 1> [30]
                                   6             set <cycle 1> [76]
                                  13             liven_func <cycle 1> [26]
                              200000             eval_math <cycle 1> [40]
                              200015             eval_expression <cycle 1> [15]
[5]     62.2    0.02    0.22  400042         eval <cycle 1> [5]
                0.00    0.10  100001/100001      get_func [7]
                0.00    0.05  300001/300002      get_var [13]
                0.00    0.03  400015/400015      get_array_var [17]
                0.00    0.02  400044/500062      next_inst [19]
                0.00    0.01  800084/2400290     get_ip [14]
                0.00    0.00      27/27          get_array_func [29]
                0.00    0.00  100000/100000      isprim [41]
                              100035             run_prim <cycle 1> [27]
                              100000             eval_math <cycle 1> [40]
-----------------------------------------------
                0.10    0.00  300001/300001      get_func [7]
[6]     26.3    0.10    0.00  300001         get_local_func [6]
-----------------------------------------------
                0.00    0.10  100001/100001      eval <cycle 1> [5]
[7]     26.3    0.00    0.10  100001         get_func [7]
                0.10    0.00  300001/300001      get_local_func [6]
-----------------------------------------------
                0.07    0.00 3800504/3800504     get_ip_ref [9]
[8]     18.4    0.07    0.00 3800504         FACT_get_curr_thread [8]
-----------------------------------------------
                0.00    0.03 1400214/3800504     set_ip [20]
                0.00    0.04 2400290/3800504     get_ip [14]
[9]     18.4    0.00    0.07 3800504         get_ip_ref [9]
                0.07    0.00 3800504/3800504     FACT_get_curr_thread [8]
-----------------------------------------------
                                   1             run_func <cycle 1> [32]
                               99999             lambda_proc <cycle 1> [22]
[10]    16.4    0.00    0.06  100000         procedure <cycle 1> [10]
                0.04    0.00  100000/100013      get_exp_length_first [16]
                0.01    0.00  200000/900058      tokcmp_safe [12]
                0.00    0.01   99999/500062      next_inst [19]
                0.00    0.00  100002/700107      set_ip [20]
                0.00    0.00  100000/2400290     get_ip [14]
                0.00    0.00   99999/100173      alloc_var [38]
                0.00    0.00       1/28          get_exp_length [65]
                              100001             eval_expression <cycle 1> [15]
-----------------------------------------------
                0.05    0.00 1000000/1000000     get_var [13]
[11]    13.2    0.05    0.00 1000000         get_local_var [11]
-----------------------------------------------
                0.00    0.00       5/900058      define [31]
                0.00    0.00      12/900058      prepare_function <cycle 1> [30]
                0.00    0.00      12/900058      defunc [28]
                0.00    0.00      15/900058      get_array_func [29]
                0.01    0.00  200000/900058      procedure <cycle 1> [10]
                0.02    0.00  300001/900058      comp_prims [21]
                0.02    0.00  400013/900058      get_array_var [17]
[12]    13.2    0.05    0.00  900058         tokcmp_safe [12]
-----------------------------------------------
                0.00    0.00       1/300002      import_func [33]
                0.00    0.05  300001/300002      eval <cycle 1> [5]
[13]    13.2    0.00    0.05  300002         get_var [13]
                0.05    0.00 1000000/1000000     get_local_var [11]
-----------------------------------------------
                0.00    0.00       1/2400290     run_func <cycle 1> [32]
                0.00    0.00       2/2400290     for_loop <cycle 1> [25]
                0.00    0.00       5/2400290     define [31]
                0.00    0.00      12/2400290     prepare_function <cycle 1> [30]
                0.00    0.00      12/2400290     defunc [28]
                0.00    0.00      13/2400290     liven_func <cycle 1> [26]
                0.00    0.00      27/2400290     get_array_func [29]
                0.00    0.00  100000/2400290     procedure <cycle 1> [10]
                0.00    0.01  400015/2400290     get_array_var [17]
                0.00    0.01  500075/2400290     move_ip [18]
                0.00    0.01  600044/2400290     eval_expression <cycle 1> [15]
                0.00    0.01  800084/2400290     eval <cycle 1> [5]
[14]    11.6    0.00    0.04 2400290         get_ip [14]
                0.00    0.04 2400290/3800504     get_ip_ref [9]
-----------------------------------------------
                               99999             for_loop <cycle 1> [25]
                              100001             procedure <cycle 1> [10]
                0.06    0.29      16/16          run_file [3]
[15]    10.8    0.03    0.01  200016         eval_expression <cycle 1> [15]
                0.00    0.01  600044/2400290     get_ip [14]
                0.00    0.00       2/500062      next_inst [19]
                0.00    0.00       1/700107      set_ip [20]
                0.00    0.00       1/100173      alloc_var [38]
                0.00    0.00       1/40          mpc_set [59]
                              200015             eval <cycle 1> [5]
                                   1             for_loop <cycle 1> [25]
-----------------------------------------------
                0.00    0.00      13/100013      liven_func <cycle 1> [26]
                0.04    0.00  100000/100013      procedure <cycle 1> [10]
[16]    10.5    0.04    0.00  100013         get_exp_length_first [16]
                0.00    0.00      14/28          get_exp_length [65]
-----------------------------------------------
                0.00    0.03  400015/400015      eval <cycle 1> [5]
[17]     7.8    0.00    0.03  400015         get_array_var [17]
                0.02    0.00  400013/900058      tokcmp_safe [12]
                0.00    0.01  400015/2400290     get_ip [14]
-----------------------------------------------
                0.00    0.00      13/500075      liven_func <cycle 1> [26]
                0.00    0.03  500062/500075      next_inst [19]
[18]     7.3    0.00    0.03  500075         move_ip [18]
                0.00    0.02  500075/700107      set_ip [20]
                0.00    0.01  500075/2400290     get_ip [14]
-----------------------------------------------
                0.00    0.00       2/500062      eval_expression <cycle 1> [15]
                0.00    0.00       5/500062      define [31]
                0.00    0.00      12/500062      defunc [28]
                0.00    0.01   99999/500062      procedure <cycle 1> [10]
                0.00    0.02  400044/500062      eval <cycle 1> [5]
[19]     7.3    0.00    0.03  500062         next_inst [19]
                0.00    0.03  500062/500075      move_ip [18]
-----------------------------------------------
                0.00    0.00       1/700107      eval_expression <cycle 1> [15]
                0.00    0.00       2/700107      run_func <cycle 1> [32]
                0.00    0.00      10/700107      prepare_function <cycle 1> [30]
                0.00    0.00      16/700107      run_file [3]
                0.00    0.00  100001/700107      for_loop <cycle 1> [25]
                0.00    0.00  100002/700107      procedure <cycle 1> [10]
                0.00    0.02  500075/700107      move_ip [18]
[20]     6.8    0.00    0.03  700107         set_ip [20]
                0.00    0.03 1400214/3800504     get_ip_ref [9]
-----------------------------------------------
                                                 <spontaneous>
[21]     5.7    0.01    0.02                 comp_prims [21]
                0.02    0.00  300001/900058      tokcmp_safe [12]
-----------------------------------------------
                               99999             run_prim <cycle 1> [27]
[22]     2.6    0.01    0.00   99999         lambda_proc <cycle 1> [22]
                0.00    0.00   99999/100052      alloc_func [39]
                               99999             procedure <cycle 1> [10]
-----------------------------------------------
                0.01    0.00      11/11          init_BIFs [24]
[23]     1.3    0.01    0.00      11         FACT_INSTALL_BIF [23]
                0.00    0.00      11/36          add_func [60]
                0.00    0.00      11/40          get_words [58]
-----------------------------------------------
                0.00    0.01       1/1           process_args [1]
[24]     1.3    0.00    0.01       1         init_BIFs [24]
                0.01    0.00      11/11          FACT_INSTALL_BIF [23]
-----------------------------------------------
                                   1             eval_expression <cycle 1> [15]
[25]     1.0    0.00    0.00       1         for_loop <cycle 1> [25]
                0.00    0.00  100001/700107      set_ip [20]
                0.00    0.00       2/2400290     get_ip [14]
                0.00    0.00  100000/102011      mpc_cmp [36]
                0.00    0.00   99998/99999       mpc_sub [43]
                0.00    0.00       1/100052      alloc_func [39]
                0.00    0.00       1/100174      mpc_init [37]
                0.00    0.00       1/2           mpc_set_ui [77]
                0.00    0.00       1/100173      alloc_var [38]
                               99999             eval_expression <cycle 1> [15]
                                   2             eval <cycle 1> [5]
-----------------------------------------------
                                  13             run_prim <cycle 1> [27]
[26]     0.0    0.00    0.00      13         liven_func <cycle 1> [26]
                0.00    0.00      13/100013      get_exp_length_first [16]
                0.00    0.00      13/500075      move_ip [18]
                0.00    0.00      13/2400290     get_ip [14]
                0.00    0.00      26/202595      FACT_malloc [35]
                0.00    0.00      13/28          get_exp_length [65]
                                  13             eval <cycle 1> [5]
-----------------------------------------------
                              100035             eval <cycle 1> [5]
[27]     0.0    0.00    0.00  100035         run_prim <cycle 1> [27]
                0.00    0.00      12/12          defunc [28]
                0.00    0.00       5/5           define [31]
                0.00    0.00       1/1           lambda [80]
                               99999             lambda_proc <cycle 1> [22]
                                  13             liven_func <cycle 1> [26]
                                   3             set <cycle 1> [76]
                                   2             run_func <cycle 1> [32]
-----------------------------------------------
                0.00    0.00      12/12          run_prim <cycle 1> [27]
[28]     0.0    0.00    0.00      12         defunc [28]
                0.00    0.00      12/900058      tokcmp_safe [12]
                0.00    0.00      12/500062      next_inst [19]
                0.00    0.00      12/2400290     get_ip [14]
                0.00    0.00      12/100052      alloc_func [39]
                0.00    0.00      12/36          add_func [60]
-----------------------------------------------
                0.00    0.00      27/27          eval <cycle 1> [5]
[29]     0.0    0.00    0.00      27         get_array_func [29]
                0.00    0.00      15/900058      tokcmp_safe [12]
                0.00    0.00      27/2400290     get_ip [14]
-----------------------------------------------
                                   2             run_func <cycle 1> [32]
[30]     0.0    0.00    0.00       2         prepare_function <cycle 1> [30]
                0.00    0.00      12/900058      tokcmp_safe [12]
                0.00    0.00      10/700107      set_ip [20]
                0.00    0.00      12/2400290     get_ip [14]
                0.00    0.00       2/19          make_syn_tree [66]
                0.00    0.00       2/5           clone_var [74]
                0.00    0.00       2/40          mpc_set [59]
                                   6             eval <cycle 1> [5]
-----------------------------------------------
                0.00    0.00       5/5           run_prim <cycle 1> [27]
[31]     0.0    0.00    0.00       5         define [31]
                0.00    0.00       5/900058      tokcmp_safe [12]
                0.00    0.00       5/500062      next_inst [19]
                0.00    0.00       5/2400290     get_ip [14]
                0.00    0.00       5/100173      alloc_var [38]
                0.00    0.00       5/7           add_var [73]
-----------------------------------------------
                                   2             run_prim <cycle 1> [27]
[32]     0.0    0.00    0.00       2         run_func <cycle 1> [32]
                0.00    0.00       1/1           import_func [33]
                0.00    0.00       2/700107      set_ip [20]
                0.00    0.00       1/2400290     get_ip [14]
                0.00    0.00       2/100052      alloc_func [39]
                0.00    0.00       1/19          make_syn_tree [66]
                                   2             prepare_function <cycle 1> [30]
                                   1             procedure <cycle 1> [10]
-----------------------------------------------
                0.00    0.00       1/1           run_func <cycle 1> [32]
[33]     0.0    0.00    0.00       1         import_func [33]
                0.00    0.00       1/300002      get_var [13]
                0.00    0.00      13/36          add_func [60]
                0.00    0.00      13/40          get_words [58]
                0.00    0.00      13/13          combine_strs [72]
                0.00    0.00       1/1           array_to_string [79]
                0.00    0.00       1/202595      FACT_malloc [35]
                0.00    0.00       1/1           FACT_get_ui [78]
-----------------------------------------------
                0.00    0.00       1/230926      rm_cslashes [81]
                0.00    0.00      59/230926      compile_constants [69]
                0.00    0.00     930/230926      check [68]
                0.00    0.00    1102/230926      get_words [58]
                0.00    0.00    2056/230926      get_newlines [61]
                0.00    0.00    2995/230926      get_input [67]
                0.00    0.00  223783/230926      gmp_realloc_wrapper [122]
[34]     0.0    0.00    0.00  230926         FACT_realloc [34]
-----------------------------------------------
                0.00    0.00       1/202595      main [2]
                0.00    0.00       1/202595      rm_cslashes [81]
                0.00    0.00       1/202595      array_to_string [79]
                0.00    0.00       1/202595      import_func [33]
                0.00    0.00      13/202595      combine_strs [72]
                0.00    0.00      26/202595      liven_func <cycle 1> [26]
                0.00    0.00      32/202595      parse [71]
                0.00    0.00      48/202595      check [68]
                0.00    0.00      97/202595      compile_constants [69]
                0.00    0.00     195/202595      compile_to_bytecode [70]
                0.00    0.00     877/202595      make_syn_tree [66]
                0.00    0.00    1078/202595      get_words [58]
                0.00    0.00  100052/202595      alloc_func [39]
                0.00    0.00  100173/202595      alloc_var [38]
[35]     0.0    0.00    0.00  202595         FACT_malloc [35]
-----------------------------------------------
                0.00    0.00    2011/102011      compare_var_arrays [45]
                0.00    0.00  100000/102011      for_loop <cycle 1> [25]
[36]     0.0    0.00    0.00  102011         mpc_cmp [36]
-----------------------------------------------
                0.00    0.00       1/100174      for_loop <cycle 1> [25]
                0.00    0.00  100173/100174      alloc_var [38]
[37]     0.0    0.00    0.00  100174         mpc_init [37]
-----------------------------------------------
                0.00    0.00       1/100173      sub [83]
                0.00    0.00       1/100173      eval_expression <cycle 1> [15]
                0.00    0.00       1/100173      for_loop <cycle 1> [25]
                0.00    0.00       1/100173      FACT_get_ui [78]
                0.00    0.00       1/100173      compile_constants [69]
                0.00    0.00       5/100173      define [31]
                0.00    0.00       7/100173      add_var [73]
                0.00    0.00      29/100173      string_to_array [82]
                0.00    0.00      34/100173      clone_var [74]
                0.00    0.00      94/100173      num_to_var [55]
                0.00    0.00   99999/100173      procedure <cycle 1> [10]
[38]     0.0    0.00    0.00  100173         alloc_var [38]
                0.00    0.00  100173/202595      FACT_malloc [35]
                0.00    0.00  100173/100174      mpc_init [37]
-----------------------------------------------
                0.00    0.00       1/100052      process_args [1]
                0.00    0.00       1/100052      lambda [80]
                0.00    0.00       1/100052      for_loop <cycle 1> [25]
                0.00    0.00       2/100052      run_func <cycle 1> [32]
                0.00    0.00      12/100052      defunc [28]
                0.00    0.00      36/100052      add_func [60]
                0.00    0.00   99999/100052      lambda_proc <cycle 1> [22]
[39]     0.0    0.00    0.00  100052         alloc_func [39]
                0.00    0.00  100052/202595      FACT_malloc [35]
-----------------------------------------------
                              100000             eval <cycle 1> [5]
[40]     0.0    0.00    0.00  100000         eval_math <cycle 1> [40]
                0.00    0.00   99999/99999       mult_assignment [44]
                0.00    0.00       1/1           sub [83]
                              200000             eval <cycle 1> [5]
-----------------------------------------------
                0.00    0.00  100000/100000      eval <cycle 1> [5]
[41]     0.0    0.00    0.00  100000         isprim [41]
-----------------------------------------------
                0.00    0.00   99999/99999       mult_assignment [44]
[42]     0.0    0.00    0.00   99999         mpc_mul [42]
-----------------------------------------------
                0.00    0.00       1/99999       sub [83]
                0.00    0.00   99998/99999       for_loop <cycle 1> [25]
[43]     0.0    0.00    0.00   99999         mpc_sub [43]
-----------------------------------------------
                0.00    0.00   99999/99999       eval_math <cycle 1> [40]
[44]     0.0    0.00    0.00   99999         mult_assignment [44]
                0.00    0.00   99999/99999       mpc_mul [42]
-----------------------------------------------
                                  44             compare_var_arrays [45]
                0.00    0.00    2011/2011        compile_constants [69]
[45]     0.0    0.00    0.00    2011+44      compare_var_arrays [45]
                0.00    0.00    2011/102011      mpc_cmp [36]
                                  44             compare_var_arrays [45]
-----------------------------------------------
                0.00    0.00    1970/1970        get_words [58]
[46]     0.0    0.00    0.00    1970         is_in_quotes [46]
-----------------------------------------------
                0.00    0.00     363/1517        check [68]
                0.00    0.00    1154/1517        parse [71]
[47]     0.0    0.00    0.00    1517         op_get_prec [47]
-----------------------------------------------
                0.00    0.00     921/921         get_words [58]
[48]     0.0    0.00    0.00     921         is_opt [48]
-----------------------------------------------
                0.00    0.00     635/635         compile_constants [69]
[49]     0.0    0.00    0.00     635         isnum [49]
-----------------------------------------------
                0.00    0.00     259/259         parse [71]
[50]     0.0    0.00    0.00     259         pop_s [50]
-----------------------------------------------
                0.00    0.00     259/259         parse [71]
[51]     0.0    0.00    0.00     259         push_s [51]
-----------------------------------------------
                0.00    0.00     162/162         parse [71]
[52]     0.0    0.00    0.00     162         op_is_lr [52]
-----------------------------------------------
                0.00    0.00      94/94          num_to_var [55]
[53]     0.0    0.00    0.00      94         get_prec [53]
-----------------------------------------------
                0.00    0.00      94/94          num_to_var [55]
[54]     0.0    0.00    0.00      94         mpc_set_str [54]
-----------------------------------------------
                0.00    0.00      94/94          compile_constants [69]
[55]     0.0    0.00    0.00      94         num_to_var [55]
                0.00    0.00      94/100173      alloc_var [38]
                0.00    0.00      94/94          get_prec [53]
                0.00    0.00      94/94          mpc_set_str [54]
-----------------------------------------------
                0.00    0.00      74/74          get_exp_length [65]
[56]     0.0    0.00    0.00      74         get_end_block [56]
-----------------------------------------------
                0.00    0.00      16/64          parse [71]
                0.00    0.00      48/64          check [68]
[57]     0.0    0.00    0.00      64         FACT_free [57]
-----------------------------------------------
                0.00    0.00      11/40          FACT_INSTALL_BIF [23]
                0.00    0.00      13/40          import_func [33]
                0.00    0.00      16/40          run_file [3]
[58]     0.0    0.00    0.00      40         get_words [58]
                0.00    0.00    1970/1970        is_in_quotes [46]
                0.00    0.00    1102/230926      FACT_realloc [34]
                0.00    0.00    1078/202595      FACT_malloc [35]
                0.00    0.00     921/921         is_opt [48]
-----------------------------------------------
                0.00    0.00       1/40          eval_expression <cycle 1> [15]
                0.00    0.00       2/40          prepare_function <cycle 1> [30]
                0.00    0.00       3/40          set <cycle 1> [76]
                0.00    0.00      34/40          clone_var [74]
[59]     0.0    0.00    0.00      40         mpc_set [59]
-----------------------------------------------
                0.00    0.00      11/36          FACT_INSTALL_BIF [23]
                0.00    0.00      12/36          defunc [28]
                0.00    0.00      13/36          import_func [33]
[60]     0.0    0.00    0.00      36         add_func [60]
                0.00    0.00      36/100052      alloc_func [39]
-----------------------------------------------
                0.00    0.00      16/32          check [68]
                0.00    0.00      16/32          run_file [3]
[61]     0.0    0.00    0.00      32         get_newlines [61]
                0.00    0.00    2056/230926      FACT_realloc [34]
-----------------------------------------------
                0.00    0.00       1/30          process_args [1]
                0.00    0.00      29/30          string_to_array [82]
[62]     0.0    0.00    0.00      30         mpc_set_si [62]
-----------------------------------------------
                0.00    0.00      29/29          array_to_string [79]
[63]     0.0    0.00    0.00      29         mpc_get_si [63]
                0.00    0.00      29/29          power_of_ten [64]
-----------------------------------------------
                0.00    0.00      29/29          mpc_get_si [63]
[64]     0.0    0.00    0.00      29         power_of_ten [64]
-----------------------------------------------
                                  74             get_exp_length [65]
                0.00    0.00       1/28          procedure <cycle 1> [10]
                0.00    0.00      13/28          liven_func <cycle 1> [26]
                0.00    0.00      14/28          get_exp_length_first [16]
[65]     0.0    0.00    0.00      28+74      get_exp_length [65]
                0.00    0.00      74/74          get_end_block [56]
                                  74             get_exp_length [65]
-----------------------------------------------
                0.00    0.00       1/19          run_func <cycle 1> [32]
                0.00    0.00       2/19          prepare_function <cycle 1> [30]
                0.00    0.00      16/19          run_file [3]
[66]     0.0    0.00    0.00      19         make_syn_tree [66]
                0.00    0.00     877/202595      FACT_malloc [35]
-----------------------------------------------
                0.00    0.00      18/18          run_file [3]
[67]     0.0    0.00    0.00      18         get_input [67]
                0.00    0.00    2995/230926      FACT_realloc [34]
-----------------------------------------------
                0.00    0.00      16/16          parse [71]
[68]     0.0    0.00    0.00      16         check [68]
                0.00    0.00     930/230926      FACT_realloc [34]
                0.00    0.00     363/1517        op_get_prec [47]
                0.00    0.00      48/202595      FACT_malloc [35]
                0.00    0.00      48/64          FACT_free [57]
                0.00    0.00      16/32          get_newlines [61]
-----------------------------------------------
                0.00    0.00      16/16          compile_to_bytecode [70]
[69]     0.0    0.00    0.00      16         compile_constants [69]
                0.00    0.00    2011/2011        compare_var_arrays [45]
                0.00    0.00     635/635         isnum [49]
                0.00    0.00      97/202595      FACT_malloc [35]
                0.00    0.00      94/94          num_to_var [55]
                0.00    0.00      59/230926      FACT_realloc [34]
                0.00    0.00       1/1           rm_cslashes [81]
                0.00    0.00       1/100173      alloc_var [38]
                0.00    0.00       1/1           string_to_array [82]
-----------------------------------------------
                0.00    0.00      16/16          parse [71]
[70]     0.0    0.00    0.00      16         compile_to_bytecode [70]
                0.00    0.00     195/202595      FACT_malloc [35]
                0.00    0.00      16/16          compile_constants [69]
-----------------------------------------------
                0.00    0.00      16/16          run_file [3]
[71]     0.0    0.00    0.00      16         parse [71]
                0.00    0.00    1154/1517        op_get_prec [47]
                0.00    0.00     259/259         pop_s [50]
                0.00    0.00     259/259         push_s [51]
                0.00    0.00     162/162         op_is_lr [52]
                0.00    0.00      32/202595      FACT_malloc [35]
                0.00    0.00      16/16          check [68]
                0.00    0.00      16/64          FACT_free [57]
                0.00    0.00      16/16          compile_to_bytecode [70]
-----------------------------------------------
                0.00    0.00      13/13          import_func [33]
[72]     0.0    0.00    0.00      13         combine_strs [72]
                0.00    0.00      13/202595      FACT_malloc [35]
-----------------------------------------------
                0.00    0.00       2/7           process_args [1]
                0.00    0.00       5/7           define [31]
[73]     0.0    0.00    0.00       7         add_var [73]
                0.00    0.00       7/100173      alloc_var [38]
-----------------------------------------------
                                  68             clone_var [74]
                0.00    0.00       2/5           prepare_function <cycle 1> [30]
                0.00    0.00       3/5           set <cycle 1> [76]
[74]     0.0    0.00    0.00       5+68      clone_var [74]
                0.00    0.00      34/100173      alloc_var [38]
                0.00    0.00      34/40          mpc_set [59]
                                  68             clone_var [74]
-----------------------------------------------
                0.00    0.00       3/3           set <cycle 1> [76]
[75]     0.0    0.00    0.00       3         free_var [75]
-----------------------------------------------
                                   3             run_prim <cycle 1> [27]
[76]     0.0    0.00    0.00       3         set <cycle 1> [76]
                0.00    0.00       3/5           clone_var [74]
                0.00    0.00       3/3           free_var [75]
                0.00    0.00       3/40          mpc_set [59]
                                   6             eval <cycle 1> [5]
-----------------------------------------------
                0.00    0.00       1/2           for_loop <cycle 1> [25]
                0.00    0.00       1/2           FACT_get_ui [78]
[77]     0.0    0.00    0.00       2         mpc_set_ui [77]
-----------------------------------------------
                0.00    0.00       1/1           import_func [33]
[78]     0.0    0.00    0.00       1         FACT_get_ui [78]
                0.00    0.00       1/100173      alloc_var [38]
                0.00    0.00       1/2           mpc_set_ui [77]
-----------------------------------------------
                0.00    0.00       1/1           import_func [33]
[79]     0.0    0.00    0.00       1         array_to_string [79]
                0.00    0.00      29/29          mpc_get_si [63]
                0.00    0.00       1/202595      FACT_malloc [35]
-----------------------------------------------
                0.00    0.00       1/1           run_prim <cycle 1> [27]
[80]     0.0    0.00    0.00       1         lambda [80]
                0.00    0.00       1/100052      alloc_func [39]
-----------------------------------------------
                0.00    0.00       1/1           compile_constants [69]
[81]     0.0    0.00    0.00       1         rm_cslashes [81]
                0.00    0.00       1/202595      FACT_malloc [35]
                0.00    0.00       1/230926      FACT_realloc [34]
-----------------------------------------------
                0.00    0.00       1/1           compile_constants [69]
[82]     0.0    0.00    0.00       1         string_to_array [82]
                0.00    0.00      29/100173      alloc_var [38]
                0.00    0.00      29/30          mpc_set_si [62]
-----------------------------------------------
                0.00    0.00       1/1           eval_math <cycle 1> [40]
[83]     0.0    0.00    0.00       1         sub [83]
                0.00    0.00       1/100173      alloc_var [38]
                0.00    0.00       1/99999       mpc_sub [43]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

  [23] FACT_INSTALL_BIF (BIFs.h) [65] get_exp_length      [62] mpc_set_si
  [57] FACT_free              [16] get_exp_length_first   [54] mpc_set_str
   [8] FACT_get_curr_thread    [7] get_func               [77] mpc_set_ui
  [78] FACT_get_ui            [67] get_input              [43] mpc_sub
  [35] FACT_malloc            [14] get_ip                 [44] mult_assignment
  [34] FACT_realloc            [9] get_ip_ref             [19] next_inst
  [60] add_func                [6] get_local_func         [55] num_to_var
  [73] add_var                [11] get_local_var          [47] op_get_prec
  [39] alloc_func             [61] get_newlines           [52] op_is_lr (parser.c)
  [38] alloc_var              [53] get_prec               [71] parse
  [79] array_to_string        [13] get_var                [50] pop_s (parser.c)
  [68] check                  [58] get_words              [64] power_of_ten
  [74] clone_var              [33] import_func            [30] prepare_function
  [72] combine_strs           [24] init_BIFs              [10] procedure
  [21] comp_prims (primitives.c) [46] is_in_quotes (parser.c) [1] process_args
  [45] compare_var_arrays     [48] is_opt (parser.c)      [51] push_s (parser.c)
  [69] compile_constants      [49] isnum                  [81] rm_cslashes
  [70] compile_to_bytecode    [41] isprim                  [3] run_file
  [31] define                 [80] lambda                 [32] run_func
  [28] defunc                 [22] lambda_proc            [27] run_prim
   [5] eval                   [26] liven_func             [76] set
  [15] eval_expression        [66] make_syn_tree          [20] set_ip
  [40] eval_math              [18] move_ip                [82] string_to_array
  [25] for_loop               [36] mpc_cmp                [83] sub
  [75] free_var               [63] mpc_get_si             [12] tokcmp_safe
  [29] get_array_func         [37] mpc_init                [4] <cycle 1>
  [17] get_array_var          [42] mpc_mul
  [56] get_end_block (parser.c) [59] mpc_set
